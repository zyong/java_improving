# 数据源 db0,db1,db2
spring.shardingsphere.datasource.names=t_order_0, t_order_1
# 第一个数据库
spring.shardingsphere.datasource.t_order_0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.t_order_0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.t_order_0.jdbc-url=jdbc:mysql://192.168.3.13/t_order_01?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.shardingsphere.datasource.t_order_0.username=mark
spring.shardingsphere.datasource.t_order_0.password=123456

# 第二个数据库
spring.shardingsphere.datasource.t_order_1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.t_order_1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.t_order_1.jdbc-url=jdbc:mysql://192.168.3.13:3306/t_order_02?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.shardingsphere.datasource.t_order_1.username=mark
spring.shardingsphere.datasource.t_order_1.password=123456


# 水平拆分的数据库（表） 配置分库 + 分表策略 行表达式分片策略
# 分库策略
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=uid
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=t_order_$->{uid % 2}

# 分表策略 其中order为逻辑表 分表主要取决于id行
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=t_order_0$->{0..1}.order_$->{0..15}
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=order_${uid % 16}

# 打印执行的数据库以及语句
spring.shardingsphere.props.sql.show=true

mybatis-plus.type-aliases-package=com.mark.entity
mybatis-plus.mapper-locations=classpath:mapper/*.xml
mybatis-plus.configuration.jdbc-type-for-null=null
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
mybatis-plus.global-config.banner: false
